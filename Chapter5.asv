load satData.mat
load satLayers.mat
layers(end) = [];

% if loss increase or nan, learning rate maybe too high
% if loss converge early, decrease epochs (no need to continue)
% can you valid data as stop criteria
%after converge, try optimize learning rate

valData = {XVal, YVal};

opts = trainingOptions("sgdm", "Plots", "training-progress", ...
    "InitialLearnRate", 0.0001, ...
    "ValidationData", valData, ...
    "ValidationFrequency", 5, ...
    "ValidationPatience", 7, ...
    "LearnRateSchedule", "piecewise", ...
    "LearnRateDropPeriod", 1, ...
    "LearnRateDropFactor", 0.7);

landnet = trainnet(XTrain, YTrain, layers, 'crossentropy', opts);